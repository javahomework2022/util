Index: src/main/java/com/workonline/util/Operation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.workonline.util;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.*;\r\n\r\n/*\r\n该类将用户的操作转化为对于文本的原子操作集合，共为三种，分别为保持(Retain)、插入(Insert)和删除(Delete)。\r\n\r\n注意要先建一个operation，之后使用里面的retain、insert、delete方法向空的operation里面加原子操作，此条注释针对于将文本转化为操作时(这方法没写)\r\n\r\n使用方法：operation.retain(int n),n为保持的字符串长度，如果是0可以不写；\r\n        operation.insert(String s),s为插入的字符串；\r\n        operation.delete(n),这是个泛型，n可以删去的字符串，也可以是删去的字符串长度；\r\n*/\r\n\r\npublic class Operation implements Serializable {\r\n    //存储标准操作\r\n    List<AtomicOperation> operations = new LinkedList<>();\r\n    //操作作用于的字符串的长度\r\n    int originalLength;\r\n    //操作应用后字符串长度\r\n    int resultLength;\r\n    //构造方法\r\n    public Operation(){\r\n        this.originalLength = 0;\r\n        this.resultLength = 0;\r\n    }\r\n\r\n    /*\r\n    以下实现将保持、插入、删除添加到一个新的操作集合中，在构建新的操作时需要用到\r\n     */\r\n    public Operation retain(int len){\r\n        if(len == 0)\r\n            return this;\r\n        this.originalLength+=len;\r\n        this.resultLength+=len;\r\n        if(this.operations.size()!=0&&this.operations.get(this.operations.size()-1).isRetain()){\r\n            ((Retain)this.operations.get(this.operations.size() - 1)).length+=len;\r\n        }\r\n        else {\r\n            AtomicOperation newAtomicOperation = new Retain(len);\r\n            this.operations.add(newAtomicOperation);\r\n        }\r\n        return this;\r\n    }\r\n    public Operation insert(String string){\r\n        if(string.equals(\"\")){\r\n            return this;\r\n        }\r\n        this.resultLength+=string.length();\r\n        if(this.operations.size()!=0&&this.operations.get(this.operations.size()-1).isInsert()){\r\n            ((Insert)this.operations.get(this.operations.size()-1)).string+=string;\r\n        }\r\n        else if(this.operations.size()!=0&&this.operations.get(this.operations.size()-1).isDelete()){\r\n            if(this.operations.size()!=1&&this.operations.get(this.operations.size()-2).isInsert()){\r\n                ((Insert)this.operations.get(this.operations.size()-2)).string+=string;\r\n            }\r\n            else {\r\n                AtomicOperation newAtomicOperation = new Insert(string);\r\n                this.operations.add(this.operations.size()-2,newAtomicOperation);\r\n            }\r\n        }\r\n        else {\r\n            AtomicOperation newAtomicOperation = new Insert(string);\r\n            this.operations.add(newAtomicOperation);\r\n        }\r\n        return this;\r\n    }\r\n    public <T> Operation delete(T t){\r\n        int len;\r\n        if(t instanceof String){\r\n            len = ((String) t).length();\r\n        }\r\n        else\r\n            len = (Integer)t;\r\n        if(len == 0)\r\n            return this;\r\n        this.originalLength+=len;\r\n        if(this.operations.size()!=0&&this.operations.get(this.operations.size()-1).isDelete()){\r\n            ((Delete)this.operations.get(this.operations.size()-1)).length+=len;\r\n        }\r\n        else {\r\n            AtomicOperation newAtomicOperation = new Delete(len);\r\n            this.operations.add(newAtomicOperation);\r\n        }\r\n        return this;\r\n    }\r\n    \r\n    /*\r\n    重写clone方法\r\n    */\r\n    @Override\r\n    public Object clone() {\r\n        Operation operation = null;\r\n        try{\r\n            operation = (Operation) super.clone();\r\n        }catch(CloneNotSupportedException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return operation;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/workonline/util/Operation.java b/src/main/java/com/workonline/util/Operation.java
--- a/src/main/java/com/workonline/util/Operation.java	(revision 7a02dd8b3e3fe0e45b43cb403924704ce14cdc99)
+++ b/src/main/java/com/workonline/util/Operation.java	(date 1670735802243)
@@ -99,5 +99,6 @@
         }
         return operation;
     }
+
 }
 
